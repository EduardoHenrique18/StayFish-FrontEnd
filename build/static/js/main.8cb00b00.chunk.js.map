{"version":3,"sources":["auth.js","components/Header/index.js","pages/login/index.js","pages/dashboard/index.js","pages/logout/index.js","routes.js","App.js","index.js"],"names":["PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","pathname","state","message","Header","title","className","Login","toggleModal","setState","modalIsOpen","createUser","data","email","password","bornDate","name","console","log","requestInfo","method","body","JSON","stringify","headers","Headers","fetch","then","response","ok","json","catch","e","signIn","Error","result","undefined","setItem","history","push","location","this","Alert","color","Form","FormGroup","Label","for","Input","type","id","onChange","target","value","placeholder","onKeyDown","event","key","Button","block","onClick","Modal","isOpen","ModalHeader","toggle","bind","ModalBody","ModalFooter","Dashboard","date","createPayment","description","status","observation","idUser","user","_id","category","a","findPayment","addTableAttributes","findBalance","createMoney","findMoney","findTotalMoney","balance","sum","nextMonth","numberMonth","toString","months","map","number","month","year","previousMonth","payment","money","attributes","tableAttributes","dropdownOpen","togglePaymentModal","modalPaymentIsOpen","toggleMoneyModal","modalMoneyIsOpen","createAndBindPayment","createAndBindMoney","toggleNavBar","setCollapsed","collapsed","parse","Date","getMonth","getFullYear","numberYear","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Table","bordered","length","i","toLocaleDateString","ButtonDropdown","direction","Logout","removeItem","Routes","exact","path","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8cb00b00.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nconst isAuth = () => {\n    if(localStorage.getItem('token') !== null) {\n        return true\n    }\n    return false;\n};\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return (\n        <Route \n            {...rest}\n            render={props => \n            isAuth() ? (\n                <Component {...props} />\n            ): (\n                <Redirect \n                    to={{\n                        pathname: '/',\n                        state: { message: 'Usuário não autorizado' }\n                    }}\n                />\n            )}\n        />\n    );\n}\n\nexport default PrivateRoute;","import React from 'react';\n\nconst Header = ({ title }) => (\n    <header>\n        <h1 className=\"text-center font-weight-bold\">{title}</h1>\n    </header>\n);\n\nexport default Header;","import React, { Component } from 'react';\nimport { Form, FormGroup, Label, Input, Button, Alert, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport Header from '../../components/Header';\n\nexport default class Login extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            message: this.props.location.state ? this.props.location.state.message : '',\n            email: this.email,\n            password: this.password,\n            name: this.name,\n            bornDate: this.bornDate,\n            modalIsOpen: false\n        };\n    }\n\n    toggleModal = () => {\n        this.setState({ modalIsOpen: !this.state.modalIsOpen });\n    };\n\n    createUser = () => {\n        const data = { email: this.email, password: this.password, bornDate: this.bornDate, name: this.name };\n        console.log(data)\n        const requestInfo = {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            }),\n        };\n\n        fetch('https://stay-fish-backend.herokuapp.com/add', requestInfo)\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                }\n            })\n            .catch(e => {\n                this.setState({ message: e.message });\n            });\n    }\n\n    signIn = () => {\n        const data = { email: this.email, password: this.password };\n        console.log(data)\n        const requestInfo = {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            }),\n        };\n        \n        fetch('https://stay-fish-backend.herokuapp.com/login', requestInfo)\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                }\n                throw new Error(\"Login inválido...\");\n            })\n            .then(result => {\n                if (result.message === undefined) {\n                localStorage.setItem('token', JSON.stringify(result));\n                this.props.history.push(\"/admin\");\n                return;\n                }else {\n                    throw new Error(result.message);\n                }\n            })\n            .catch(e => {\n                this.setState({ message: e.message });\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"col-md-4 mainDiv\">\n                <Header title=\"Stay Fish\" />\n                <hr className=\"my-3\" />\n                {\n                    this.state.message !== '' ? (\n                        <Alert color=\"danger\" className=\"text-center\"> {this.state.message} </Alert>\n                    ) : ''\n                }\n                <Form>\n                    <FormGroup>\n                        <Label for=\"email\">Email</Label>\n                        <Input type=\"text\" id=\"email\" onChange={e => this.email = e.target.value} placeholder=\"Informe seu e-mail\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"password\">Senha</Label>\n                        <Input type=\"password\"\n                            id=\"password\"\n                            onChange={e => this.password = e.target.value}\n                            onKeyDown={event => {\n                                if (event.key === 'Enter') {\n                                    this.signIn()\n                                }\n                            }}\n                            placeholder=\"Informe a senha\"\n                        />\n                    </FormGroup>\n                    <Button color=\"primary\" block onClick={this.signIn}> Entrar </Button>\n                    <Button color=\"link\" block onClick={this.toggleModal}>Cadastre-se!</Button>\n                </Form>\n                <Modal isOpen={this.state.modalIsOpen}>\n                    <ModalHeader toggle={this.toggleModal.bind(this)}>\n                        Criar sua conta\n                    </ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <FormGroup>\n                                <Label for=\"name\">Nome</Label>\n                                <Input type=\"text\" id=\"nomeCadastro\" onChange={e => this.name = e.target.value} placeholder=\"Informe seu nome\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"email\">Email</Label>\n                                <Input type=\"text\" id=\"emailCadastro\" onChange={e => this.email = e.target.value} placeholder=\"Informe seu e-mail\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"bornDate\">Data de nascimento</Label>\n                                <Input type=\"date\" id=\"dtNascimentoCadastro\" onChange={e => this.bornDate = e.target.value} placeholder=\"Informe sua data de nascimento\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"password\">Senha</Label>\n                                <Input type=\"text\" id=\"passwordCadastro\" onChange={e => this.password = e.target.value} placeholder=\"Informe sua senha\" />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"danger\" onClick={this.toggleModal.bind(this)}>Cancelar</Button>\n                        <Button color=\"primary\" onClick={this.createUser}>Cadastrar</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from 'react';\nimport {\n  Table,\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n} from 'reactstrap';\n\nimport './style.css';\n\nexport default class Dashboard extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      user: {},\n      setCollapsed: false,\n      collapsed: false,\n      numberMonth: 0,\n      month: \"\",\n      year: 0,\n      payment: [],\n      money: [],\n      isOpen: false,\n      tableAttributes: [],\n      balance: 0,\n      dropdownOpen: false,\n      modalMoneyIsOpen: false,\n      modalPaymentIsOpen: false,\n      createPayment: {\n        value: 0,\n        description: \"\",\n        date: \"\",\n        status: 0,\n        observation: \"\",\n        category: \"\"\n      },\n      createMoney: {\n        value: 0,\n        description: \"\",\n        date: \"\",\n        observation: \"\",\n        category: \"\"\n      }\n    }\n  }\n\n  date = {\n    \"months\": [\n      {\n        \"number\": \"01\",\n        \"month\": \"jan\"\n      },\n      {\n        \"number\": \"02\",\n        \"month\": \"fev\"\n      },\n      {\n        \"number\": \"03\",\n        \"month\": \"mar\"\n      },\n      {\n        \"number\": \"04\",\n        \"month\": \"abr\"\n      },\n      {\n        \"number\": \"05\",\n        \"month\": \"mai\"\n      },\n      {\n        \"number\": \"06\",\n        \"month\": \"jun\"\n      },\n      {\n        \"number\": \"07\",\n        \"month\": \"jul\"\n      },\n      {\n        \"number\": \"08\",\n        \"month\": \"ago\"\n      },\n      {\n        \"number\": \"09\",\n        \"month\": \"set\"\n      },\n      {\n        \"number\": \"10\",\n        \"month\": \"out\"\n      },\n      {\n        \"number\": \"11\",\n        \"month\": \"nov\"\n      },\n      {\n        \"number\": \"12\",\n        \"month\": \"dez\"\n      }\n    ]\n  };\n\n  createPayment = () => {\n    const data = {\n      value: this.state.createPayment.value, description: this.state.createPayment.description, date: this.state.createPayment.date,\n      status: this.state.createPayment.status, observation: this.state.createPayment.observation, idUser: this.state.user._id, category: this.state.createPayment.category\n    };\n    console.log(data)\n    const requestInfo = {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n    };\n    fetch('https://stay-fish-backend.herokuapp.com/addPayment', requestInfo)\n      .then(async response => {\n        if (response.ok) {\n          await this.findPayment();\n          await this.addTableAttributes();\n          await this.findBalance();\n        }\n      })\n      .catch(e => {\n        this.setState({ message: e.message });\n      });\n  }\n\n  createMoney = () => {\n    const data = {\n      value: this.state.createMoney.value, description: this.state.createMoney.description, date: this.state.createMoney.date,\n      observation: this.state.createMoney.observation, idUser: this.state.user._id, category: this.state.createMoney.category\n    };\n    const requestInfo = {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n    };\n    fetch('https://stay-fish-backend.herokuapp.com/addMoney', requestInfo)\n      .then(async response => {\n        if (response.ok) {\n          await this.findMoney();\n          await this.addTableAttributes();\n          await this.findBalance();\n        }\n      })\n      .catch(e => {\n        this.setState({ message: e.message });\n      });\n  }\n\n  findTotalMoney = () => {\n    const data = { idUser: this.state.user._id };\n    const requestInfo = {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n    };\n    fetch('https://stay-fish-backend.herokuapp.com/balance', requestInfo)\n      .then(async response => {\n        if (response.ok) {\n          let balance = await response.json();\n          await this.setState({ balance: balance.sum })\n        }\n      })\n      .catch(e => {\n        this.setState({ message: e.message });\n      });\n  };\n\n  async componentDidMount() {\n    await this.setState({ user: JSON.parse(localStorage.getItem('token')) });\n    var data = new Date();\n    const numberMonth = await data.getMonth() + 1;\n    const numberYear = await data.getFullYear();\n    await this.setState({ year: numberYear })\n    await this.setState({ numberMonth: numberMonth }, () => {\n      this.date.months.map(async result => {\n        if (result.number.toString() === this.state.numberMonth.toString()) {\n          await this.setState({ month: result.month })\n        }\n      })\n    })\n    await this.findPayment();\n    await this.findMoney();\n    this.addTableAttributes();\n    await this.findTotalMoney();\n  };\n\n  findBalance = () => {\n    const data = { idUser: this.state.user._id};\n    const requestInfo = {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n    };\n    fetch('https://stay-fish-backend.herokuapp.com/balance', requestInfo)\n      .then(async response => {\n        if (response.ok) {\n          let balance = await response.json();\n          await this.setState({ balance: balance.sum })\n        }\n      })\n      .catch(e => {\n        this.setState({ message: e.message });\n      });\n  }\n\n  nextMonth = async () => {\n    let numberMonth = this.state.numberMonth;\n    if (numberMonth.toString() === \"12\") {\n      await this.setState({ numberMonth: 1 });\n      this.date.months.map(async result => {\n        if (result.number.toString() === \"1\") {\n          await this.setState({ month: result.month })\n        }\n      })\n      await this.setState({ year: this.state.year + 1 })\n    } else {\n      let nextMonth = numberMonth + 1;\n      await this.setState({ numberMonth: nextMonth });\n      this.date.months.map(async result => {\n        if (result.number.toString() === nextMonth.toString()) {\n          await this.setState({ month: result.month })\n        }\n      })\n    }\n    await this.findPayment();\n    await this.findMoney();\n    await this.addTableAttributes();\n  };\n\n  previousMonth = async () => {\n    let numberMonth = this.state.numberMonth;\n    if (numberMonth.toString() === \"1\") {\n      await this.setState({ numberMonth: 12 })\n      this.date.months.map(async result => {\n        if (result.number.toString() === \"12\") {\n          await this.setState({ month: result.month })\n        }\n      })\n      await this.setState({ year: this.state.year - 1 })\n    } else {\n      let previousMonth = numberMonth - 1;\n      await this.setState({ numberMonth: previousMonth })\n      this.date.months.map(async result => {\n        if (result.number.toString() === previousMonth.toString()) {\n          await this.setState({ month: result.month })\n        }\n      })\n    }\n    await this.findPayment();\n    await this.findMoney();\n    await this.addTableAttributes();\n  };\n\n  findPayment = () => {\n    const date = this.state.year + \"-\" + this.state.numberMonth;\n    const data = { idUser: this.state.user._id, date: date };\n    const requestInfo = {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n    };\n    fetch('https://stay-fish-backend.herokuapp.com/searchPaymentByDate', requestInfo)\n      .then(async response => {\n        if (response.ok) {\n          let payment = await response.json();\n          await this.setState({ payment: payment })\n        }\n        this.addTableAttributes();\n      })\n      .catch(e => {\n        this.setState({ message: e.message });\n      });\n  }\n\n  findMoney = () => {\n    const date = this.state.year + \"-\" + this.state.numberMonth;\n    const data = { idUser: this.state.user._id, date: date };\n    const requestInfo = {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n    };\n    fetch('https://stay-fish-backend.herokuapp.com/searchMoneyByDate', requestInfo)\n      .then(async response => {\n        if (response.ok) {\n          let money = await response.json();\n          await this.setState({ money: money })\n        }\n        this.addTableAttributes();\n      })\n      .catch(e => {\n        this.setState({ message: e.message });\n      });\n  }\n\n  addTableAttributes = async () => {\n    let attributes = [];\n    await this.state.payment.map(result => {\n      return attributes.push(result);\n    });\n    await this.state.money.map(result => {\n      return attributes.push(result);\n    });\n    this.setState({ tableAttributes: attributes })\n  }\n\n  toggle = () => this.setState({ dropdownOpen: !this.state.dropdownOpen });\n\n  togglePaymentModal = () => {\n    this.setState({ modalPaymentIsOpen: !this.state.modalPaymentIsOpen });\n  };\n\n  toggleMoneyModal = () => {\n    this.setState({ modalMoneyIsOpen: !this.state.modalMoneyIsOpen });\n  };\n\n  createAndBindPayment = async () => {\n    await this.createPayment();\n    this.togglePaymentModal();\n  }\n\n  createAndBindMoney = async () => {\n    await this.createMoney();\n    this.toggleMoneyModal();\n  }\n\n  toggleNavBar = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"float-left fixed-top\">\n          <Navbar color=\"light\" light expand=\"md\">\n            <NavbarBrand href=\"/\">Stay Fish</NavbarBrand>\n            <NavbarBrand>{this.state.balance}</NavbarBrand>\n            <NavbarToggler onClick={this.toggleNavBar} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink href=\"/\"></NavLink>\n                </NavItem>\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret>\n                    Logout\n      </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem />\n                    <DropdownItem>\n                      Sair\n        </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </Nav>\n            </Collapse>\n          </Navbar>\n        </div>\n        <div className=\"text-center\">\n          <button className=\"btn btn-link\" type=\"button\" color=\"link\" onClick={this.previousMonth}><i className=\"material-icons md-48 local\">\n            keyboard_arrow_left\n            </i></button>\n          <Label>{this.state.month}</Label>\n          <button className=\"btn btn-link\" type=\"button\" color=\"link\" onClick={this.nextMonth}><i className=\"material-icons md-48 local\">\n            keyboard_arrow_right\n            </i></button>\n        </div>\n        <form className=\"form\">\n          <Table bordered>\n            <thead>\n              <tr>\n                <th>descrição</th>\n                <th>valor</th>\n                <th>data</th>\n                <th>categoria</th>\n                <th>observação</th>\n                <th>status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.payment.length ?\n                this.state.tableAttributes.map((result,i) => (\n                  <tr key = {i}>\n                    <td>{result.description}</td>\n                    <td>{result.value}</td>\n                    <td>{new Date(result.date).toLocaleDateString(\"pt-BR\")}</td>\n                    <td>{result.category}</td>\n                    <td>{result.observation}</td>\n                    <td>{result.status === undefined ? \"\" : (result.status.toString() === \"1\" ? \"pago\" : \"pendente\")}</td>\n                  </tr>\n                ))\n                :\n                (<tr>\n                  <td>-</td>\n                  <td>-</td>\n                  <td>-</td>\n                  <td>-</td>\n                  <td>-</td>\n                  <td>-</td>\n                </tr>)\n              }\n            </tbody>\n          </Table>\n        </form>\n        <div className=\"wrapper\">\n          <ButtonDropdown direction=\"up\" isOpen={this.state.dropdownOpen} toggle={this.toggle} className=\"createButton\">\n            <DropdownToggle caret color=\"primary\">\n              +\n                    </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem onClick={this.togglePaymentModal}>Pagamento</DropdownItem>\n              <DropdownItem onClick={this.toggleMoneyModal}>Fatura</DropdownItem>\n            </DropdownMenu>\n          </ButtonDropdown>\n        </div>\n        <Modal isOpen={this.state.modalPaymentIsOpen}>\n          <ModalHeader toggle={this.togglePaymentModal.bind(this)}>\n            Adicionar pagamento\n                    </ModalHeader>\n          <ModalBody>\n            <Form>\n              <FormGroup>\n                <Label for=\"descrição\">Descrição</Label>\n                <Input type=\"text\" id=\"descricaoPagamento\" onChange={e => this.state.createPayment.description = e.target.value} placeholder=\"Informe a descrição\" />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"valor\">Valor</Label>\n                <Input type=\"text\" id=\"valorPagamento\" onChange={e => this.state.createPayment.value = e.target.value} placeholder=\"Informe o valor\" />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"dataPagamento\">Data do Pagamento</Label>\n                <Input type=\"date\" id=\"dtPagamento\" onChange={e => this.state.createPayment.date = e.target.value} placeholder=\"Informe a data do pagamento\" />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"Status\">Status</Label>\n                <Input type=\"text\" id=\"statusPagamento\" onChange={e => this.state.createPayment.status = e.target.value} placeholder=\"Informe o status\" />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"Observação\">Observação</Label>\n                <Input type=\"text\" id=\"observaçãoPagamento\" onChange={e => this.state.createPayment.observation = e.target.value} placeholder=\"Informe uma observação\" />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"categoria\">categoria</Label>\n                <Input type=\"text\" id=\"categoriaPagamento\" onChange={e => this.state.createPayment.category = e.target.value} placeholder=\"Informe uma categoria\" />\n              </FormGroup>\n            </Form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"danger\" onClick={this.togglePaymentModal.bind(this)}>Cancelar</Button>\n            <Button color=\"primary\" onClick={this.createAndBindPayment}>Adicionar</Button>\n          </ModalFooter>\n        </Modal>\n        <Modal isOpen={this.state.modalMoneyIsOpen}>\n          <ModalHeader toggle={this.toggleMoneyModal.bind(this)}>\n            Adicionar fatura\n                    </ModalHeader>\n          <ModalBody>\n            <Form>\n              <ModalBody>\n                <Form>\n                  <FormGroup>\n                    <Label for=\"descrição\">Descrição</Label>\n                    <Input type=\"text\" id=\"descricaoMoney\" onChange={e => this.state.createMoney.description = e.target.value} placeholder=\"Informe a descrição\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"valor\">Valor</Label>\n                    <Input type=\"text\" id=\"valorMoney\" onChange={e => this.state.createMoney.value = e.target.value} placeholder=\"Informe o valor\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"dataMoney\">Data da fatura</Label>\n                    <Input type=\"date\" id=\"dtMoney\" onChange={e => this.state.createMoney.date = e.target.value} placeholder=\"Informe a data da fatura\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"Observação\">Observação</Label>\n                    <Input type=\"text\" id=\"observaçãoMoney\" onChange={e => this.state.createMoney.observation = e.target.value} placeholder=\"Informe uma observação\" />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"categoria\">categoria</Label>\n                    <Input type=\"text\" id=\"categoriaMoney\" onChange={e => this.state.createMoney.category = e.target.value} placeholder=\"Informe uma categoria\" />\n                  </FormGroup>\n                </Form>\n              </ModalBody>\n            </Form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"danger\" onClick={this.toggleMoneyModal.bind(this)}>Cancelar</Button>\n            <Button color=\"primary\" onClick={this.createAndBindMoney}>Adicionar</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}","import { Component } from 'react';\n\nexport default class Logout extends Component {\n\n    componentWillMount() {\n        localStorage.removeItem('token');\n        this.props.history.push('/');\n    }\n\n    render() {\n        return null;\n    }\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport PrivateRoute from './auth';\n\nimport Login from './pages/login';\nimport Dashboard from './pages/dashboard';\nimport Logout from './pages/logout';\n\nconst Routes = () => (\n    <Router>\n        <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <PrivateRoute path=\"/admin\" component={Dashboard} />\n            <Route exact path=\"/logout\" component={Logout} />\n        </Switch>\n    </Router>\n);\n\nexport default Routes;","import React, { Component } from 'react';\n\nimport './app.css';\n\nimport Routes from './routes';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Routes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}